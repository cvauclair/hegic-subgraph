# ================================================================
# Event-like entities (i.e.: tracked over time)
# ================================================================
type Provide @entity {
  id: ID! # POOL_ADDR-PROVIDE_INDEX

  blockNumber: BigInt!
  timestamp: BigInt!

  account: String!
  amount: BigInt!
  numWriteTokens: BigInt!

  pool: LiquidityPool!
}

type Withdraw @entity {
  id: ID! # POOL_ADDR-WITHDRAW_INDEX

  blockNumber: BigInt!
  timestamp: BigInt!

  account: String!
  amount: BigInt!
  numWriteTokens: BigInt!

  pool: LiquidityPool!
}

# Note: Profit and Loss events are from the pool's point of vue.
# E.g.: A Profit event with fields {option: OID, amount: X, pool: PID}
# means that Pool "PID" has made a profit of "X" from the option "OID".
type Profit @entity {
  id: ID! # POOL_ADDR-POOL_PROFIT_INDEX

  blockNumber: BigInt!
  timestamp: BigInt!

  amount: BigInt!
  pool: LiquidityPool!
  option: HegicOption!
}

type Loss @entity {
  id: ID! # POOL_ADDR-POOL_LOSS_INDEX

  blockNumber: BigInt!
  timestamp: BigInt!

  amount: BigInt!
  pool: LiquidityPool!
  option: HegicOption!
}

type Claim @entity {
  id: ID!

  blockNumber: BigInt!
  timestamp: BigInt!

  amount: BigInt!
  account: String!
}

# ================================================================
# Assets and options
# ================================================================
type ImpliedVolatility @entity {
  id: ID!

  blockNumber: BigInt!
  timestamp: BigInt!

  impliedVolatility: BigInt!
  pool: LiquidityPool!
}

type Asset @entity {
  id: ID! # id is token address, with 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE for ETH
  symbol: String!
  name: String!
  decimals: Int!
}

enum OptionState {
  Inactive
  Active
  Exercised
  Expired
}

enum OptionType {
  Put
  Call
}

type HegicOption @entity {
  id: ID! # POOL_ADDR-OPTION_ID
  underlying: Asset!

  creationBlock: BigInt!
  creationTimestamp: BigInt!

  holder: String!
  premium: BigInt!
  strike: BigInt!
  amount: BigInt!
  expiration: BigInt!
  type: OptionType!
  state: OptionState!

  settlementFee: BigInt!
  pool: LiquidityPool!
}

# ================================================================
# Option pools and staking
# ================================================================
type LiquidityPool @entity {
  id: ID! # POOL_ADDR

  underlying: Asset!

  numOptions: BigInt!
  numExpiredOptions: BigInt!
  numExercisedOptions: BigInt!
  options: [HegicOption!]! @derivedFrom(field: "pool")

  numProvides: BigInt!
  provides: [Provide!]! @derivedFrom(field: "pool")
  latestProvide: Provide

  numWithdraws: BigInt!
  withdraws: [Withdraw!]! @derivedFrom(field: "pool")
  latestWithdraw: Withdraw

  liquidity: BigInt!

  numProfits: BigInt!
  profits: [Profit!]! @derivedFrom(field: "pool")
  latestProfit: Profit
  totalProfits: BigInt!

  numLosses: BigInt!
  losses: [Loss!]! @derivedFrom(field: "pool")
  latestLoss: Loss
  totalLosses: BigInt!

  # Cummulative stats
  totalSettlementFees: BigInt!
  totalFees: BigInt!    # settlement + premiums
  
  totalPutVolume: BigInt!
  totalCallVolume: BigInt!

  # Implied volatility timeseries
  numImpliedVolatility: BigInt!
  impliedVolatility: [ImpliedVolatility!]! @derivedFrom(field: "pool")
  latestImpliedVolatility: ImpliedVolatility
}